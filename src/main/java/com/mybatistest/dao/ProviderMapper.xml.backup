<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatistest.dao.ProviderMapper">

    <select id="selectAllProvider" resultType="Provider">
        select * from smbms_provider
    </select>

    <select id="getProviderByName" resultType="Provider" parameterType="String">
        select * from smbms_provider where proName like concat('%',#{proName},'%')
    </select>

    <select id="getProviderByid" resultType="Provider" parameterType="Integer">
        select * from smbms_provider where id = #{id}
    </select>

    <insert id="add1Provider" parameterType="Provider">
        insert into smbms_provider (id, proCode, proName, proDesc, proContact, proPhone, proAddress, proFax, createdBy, creationDate)
        values (#{id},#{proCode},#{proName},#{proDesc},#{proContact},#{proPhone},#{proAddress},#{proFax},#{createdBy},#{creationDate})
    </insert>
    
    <update id="modifyNameByParam">
        update smbms_provider set proName = #{proName} where id = #{id}
    </update>

    <update id="modifyProvider" parameterType="Provider">
        update smbms_provider set proName = #{proName}, modifyBy = #{modifyBy}, modifyDate = #{modifyDate} where id = #{id}
    </update>

    <delete id="delete1ProviderByid">
        delete from smbms_provider where id = #{id}
    </delete>

    <resultMap id="showBill" type="Provider">
        <id column="id" property="id"/>
        <result column="proCode" property="proCode"/>
        <result column="proName" property="proName"/>
        <result column="proContact" property="proContact"/>
        <result column="proPhone" property="proPhone"/>
        <collection property="billList" ofType="Bill">
            <result column="billCode" property="billCode"/>
            <result column="productName" property="productName"/>
            <result column="totalPrice" property="totalPrice"/>
            <result column="isPayment" property="isPayment"/>
        </collection>
    </resultMap>

    <select id="selectAllBillByProviderid" parameterType="int" resultMap="showBill">
        select p.id, p.proCode, p.proName, p.proContact, p.proPhone, b.billCode, b.productName, b.totalPrice, b.isPayment
        from smbms_provider p, smbms_bill b where p.id = #{id} and b.providerId = p.id
    </select>

    <!--动态SQL-->

    <select id="dynamicSelect" resultType="Provider">
        select id, proCode, proName, proContact, proPhone, proFax, creationDate from smbms_provider
        <where>
            <if test="proName != null">
                and proName like concat('%',#{proName},'%')
             </if>
            <if test="proCode != null">
               and proCode like concat('%',#{proCode},'%')
            </if>
        </where>
    </select>

    <update id="dynamicUpdate">
        update smbms_provider
        <set>
            <if test="proName != null">
                proname = #{proName}
            </if>
            <if test="proCode != null">
                proCode = #{proCode}
            </if>
        </set>
        where id = #{id};
    </update>

    <!--动态SQL:trim（动态插入,更新）-->
    <!--prefix前缀，suffix后缀，xxxffixOverrides前/后缀覆盖-->
    <insert id="dynamicInsert">
        insert into smbms_provider
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="proCode != null">
                proCode,
            </if>
        </trim>
    </insert>

    <update id="dynamicUpdateTrim">
        update smbms_provider
        <trim prefix="set " suffix="where id = #{id}">
            <if test="proName != null">
                proname = #{proName}
            </if>
            <if test="proCode != null">
                proCode = #{proCode}
            </if>
        </trim>
    </update>

    <!--foreach（迭代集合，用于in或notin）-->
    <!--类似于JAVA for(对象:集合）{代码}-->
    <!--select * from xxx where id in (1,2,3,4,5)-->
    <!--如果collection是map，则item中填入key的名字-->

    <select id="selectByIds" resultType="Provider">
        select * from smbms_provider
        where id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectAllBillByIds" parameterType="int" resultMap="showBill">
        select p.id, p.proCode, p.proName, p.proContact, p.proPhone, b.billCode, b.productName, b.totalPrice, b.isPayment
        from smbms_provider p, smbms_bill b where p.id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
        #{id}
        </foreach>
         and b.providerId = p.id
    </select>

    <select id="selectAllBillByListIds" parameterType="List" resultMap="showBill">
        select p.id, p.proCode, p.proName, p.proContact, p.proPhone, b.billCode, b.productName, b.totalPrice, b.isPayment
        from smbms_provider p, smbms_bill b where p.id in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        and b.providerId = p.id
    </select>

    <select id="selectALlBillByCodeAndIds" parameterType="Map" resultMap="showBill">
        select p.id, p.proCode, p.proName, p.proContact, p.proPhone, b.billCode, b.productName, b.totalPrice, b.isPayment
        from smbms_provider p, smbms_bill b where p.proCode like concat('%',#{proCode},'%') and p.id = b.providerId and p.id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <!--choose（when otherwise） 相当于Switch 可用于动态排序-->
<!--<choose（选择条件）>
    <when test="username != null">
        and userName like #{userName}
    </when>
    <otherwise>
        and userRole = #{userRole}
    </otherwise>
</choose>-->

    <select id="chooseSelect" parameterType="Provider" resultType="Provider">
        select id, proCode, proName, proContact, proPhone, creationDate
        from smbms_provider where 1=1
        <choose>
            <when test="proCode != null">
                and proCode like concat('%',#{proCode},'%')
            </when>
            <when test="proName != null">
                and proName like concat('%',#{proName},'%')
            </when>
            <when test="proContact != null">
                and proContact like concat('%',#{proContact},'%')
            </when>
            <when test="creationDate != null">
                and creationDate = #{creationDate}
            </when>
            <otherwise>
                and creationDate between '2022-01-01 00:00:00' and '2022-12-31 23:59:59'
            </otherwise>
        </choose>
    </select>

    <!--分页相关-->
    <select id="selectCountAll" resultType="int">
        select count(1)from smbms_provider id;
    </select>
    <!--
        10%每页条数?10/每页条数:10/每页条数+1
        select* from user
        order by id
        limit 0,4（每页4条，从0~3条）
        limit 4,4（每页4条，从4~7条）
        limit 8,4
        公式：limit （当前页-1）*每页条数，每页条数
    -->

    <select id="selectByPage" resultType="Provider">
        select * from smbms_provider
        order by creationDate
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
    </select>



</mapper>
